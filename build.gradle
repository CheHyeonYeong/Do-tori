buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.dotori'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Lombok 관련 의존성
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// 데이터베이스 관련 의존성
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation "com.h2database:h2"

	// 테스트 관련 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Thymeleaf 관련 의존성
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'

	// QueryDSL 관련 의존성
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	)

	// 모델 매핑 관련 의존성
	implementation 'org.modelmapper:modelmapper:3.2.0'

	// Kotlin 관련 의존성
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

	// 스프링 시큐리티 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JSON 관련 의존성, JWT 관련
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5', 'io.jsonwebtoken:jjwt-jackson:0.12.5'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java","$projectDir/build/generated"]
		}
	}
}

// compile 정리...
compileJava.dependsOn('clean')